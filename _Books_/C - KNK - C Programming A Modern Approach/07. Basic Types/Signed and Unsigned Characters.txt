Since C allows characters to be used as integers, it shouldn't be surprising that the char type -like the integer typesâ€” exists in both signed and unsigned versions.

Signed characters normally have values between -128 and 127. while unsigned characters have values between 0 and 255.

The C standard doesn't specify whether ordinary char is a signed or an unsigned type; some compilers treat it as a signed type. while others treat it as an unsigned type. (Some even allow the programmer to select. via a compiler option. whether char should be signed or unsigned.)

Most of the time, we don't really care whether char is signed or unsigned. Once in a while, though, we do. especially if we're using a character variable to store a small integer. 

For this reason, C allows the use of the words signed and unsigned to modify char:

signed char sch;
unsigned char uch;

Don't assume that char is either signed or unsigned by default. 
If it matters, use signed char or unsigned char instead of char.
