In C99, the first expression in a for statement can be replaced by a declaration.

This feature allows the programmer to declare a variable for use by the loop:

for (int i = O; i < n; i++)  // initialize, test, update
  ...


The variable i need not have been declared prior to this statement. (In fact, if a declaration of i already exists, this statement creates a new version of i that will be used solely within the loop.)

A variable declared by a for statement can’t be accessed outside the body of the loop (we say that it’s not visible outside the loop):

for (int i = O; i < n; i++) {
  ...
  printf("%d", i);  /* legal; i is visible inside loop */
  ...
}
printf("%d", i);    /*** WRONG ***/


Having a for statement declare its own control variable is usually a good
idea: it’s convenient and it can make programs easier to understand. However, if
the program needs to access the variable after loop termination, it’s necessary to use the older form of the for statement.

Incidentally, a for statement may declare more than one variable, provided
that all variables have the same type:

for (int i = 0, j = O; i < n; i++)
  ...