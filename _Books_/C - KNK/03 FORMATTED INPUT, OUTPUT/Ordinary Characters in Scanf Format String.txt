The concept of pattern-matching can be taken one step further by writing format strings that contain ordinary characters in addition to conversion specifications.

The action that scanf takes when it processes an ordinary character in a format string depends on whether or not it's a white-space character.


- White-space characters.

When it encounters one or more consecutive white-space characters in a format string, scanf repeatedly reads white-space characters from the input until it reaches a non-white-space character (which is "put back").

The number of white-space characters in the format string is irrelevant; one white-space character in the format string will match any number of white-space characters in input.

(Incidentally, putting a white-space character in a format string doesn't force the input to contain white-space characters. A white-space character in a format string matches any number of white-space characters in the input, including none.)


-Other characters.

When it encounters a non-white-space character in a format string, scanf compares it with the next input character.

If the two characters match, scanf discards the input character and continues processing the format string.

If the characters don't match, scanf puts the offending character back into the input, then aborts without further processing the format string or reading characters from the input.
