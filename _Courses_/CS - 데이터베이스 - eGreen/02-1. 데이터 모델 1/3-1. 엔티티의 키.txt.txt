=== 엔티티의 키

ㅇ 키(Key) 속성
- 간단히 키라고 함
- 각 엔티티 인스턴스를 유일하게 식별하는 데 사용
- 관계형 데이터 모델에서 특정 레코드를 식별하기 위해 사용한다. 두 개 이상의 필드로 구성된 키를 복합키라고 한다. 키의 종류에는 슈퍼키, 후보키, 기본키, 외래키, 대체키가 있다.

ㅇ 슈퍼키(Super Key)
- 레코드들을 식별할 수 있는 ‘필드의 집합’ (유일성)
- 테이블은 적어도 1개의 슈퍼키를 가져야 한다.

ㅇ 후보키(Candidate Key)
- 슈퍼키에서 레코드를 식별할 수 있는 최소한의 필드만 남겨놓은 집합 (유일성, 최소성)
- ex) 슈퍼키 { 학번, 학생이름, 학과 } 집합은 학번만으로도 레코드를 식별할 수 있으므로 부분집합 중 { 학번 } 집합만 후보키가 될 수 있다.

ㅇ 기본키(=주 키 =PK =Primary Key)
- 설계자가 여러 후보키 중 하나를 선택하여 정의한 식별자 (유일성, 최소성)
- 기본키의 모든 필드의 값은 null 이 될 수 없다.

ㅇ 외래키(=FK =Foreign Key)
- 다른 테이블의 기본키를 참조한다.
- 외래키의 모든 필드는 참조하는 기본키와 동일한 도메인(값의 종류&범위)을 갖는다.
- 외래키의 모든 필드의 값은 참조하는 기본키와 동일하거나 null 이다.

ㅇ 대체키(Alternate Key)
- 기본키로 선택되지 못한 후보키들이다. 
- 이름에서 알 수 있듯이 대체키는 기본키를 대신할 수 있지만 기본키가 되지 못하고 탈락한 이유가 있을 수 있다. 
- 기본키를 선택할 때 고려할 사항을 하나씩 따져보면 기본키의 [주소 속성이 추가된 릴레이션의 예]의 고객 릴레이션은 고객아이디 속성을 기본키로 선택하는 것이 무난하다. 
- 따라서 기본키로 선택되지 못한 (고객이름, 주소) 속성 집합이 대체키가 된다. 

ㅇ 복합키(Composite Key)

학번  | 과목번호 | 학점
-----------------------
11002 | CS310    | A0
11002 | CS313    | B+
24036 | CS345    | B0
24036 | CS310    | B-

학번을 기본키로 하면 두 개 튜플이 중복되 유일성을 만족시키지 않고(1번과 2번 튜플), 과목번호를 기본키로 하면 11002학번의 학생도 CS310과목을 들을 수 있고 24036학번의 학생도 CS310과목을 들을 수 있으니까 마찬가지로 중복되죠. 

따라서 단일 속성으로는 튜플을 구분할 수 없고 두 개의 속성이 모인 (학번, 과목번호)가 후보 키가 됩니다.

즉, 데이터베이스 설계에서 복합키는 각 튜플들을 식별할 수 있는 두개 또는 그 이상의 속성들로 구성된 후보키를 말해요.

튜플을 구별하는 속성이 하나면 단일키인거고 두 개 이상으로 이루어졌으면 복합키인 거고 간단하죠? :)

https://jhnyang.tistory.com/71
