Q1. 은행가 알고리즘(Banker’s Algorithm)과 가장 관계가 깊은 것은?
1. 교착상태 지연
2. 교착상태 발견
3. 교착상태 회피
4. 교착상태 회복


교착상태 회피 알고리즘을 실행 시킴으로서 시스템의 오버헤드가 증가한다.
3


Q2. 교착상태(Dead Lock)는 하나 이상의 프로세스가 더 이상 계속할 수 없는 어떤 특정 사건을 기다리고 있는 상태를 말한다. 여기서 특정 사건의 의미로 가장 적당한 것은? 
1. 자원의 할당과 해제
2. 자원의 요구
3. 무한 연기
4. 자원 사용


사용 가능한 자원의 수, 할당된 자원의 수, 프로세스들의 최대 요구 수에 의하여 정의 된다.
1


Q3. 교착상태 발생조건 중 "프로세스가 수행되기 전에 필요한 모든 자원을 할당시켜 준다. 자원이 점유되지 않은 상태에서만 자원을 요구하도록 한다."는 어떤 조건을 제거하기 위한 것인가?
1. 상호배제 (Mutual Exclusion)
2. 점유와 대기 (Hold and Wait)
3. 비선점 (Non-Preemption)
4. 환형 대기(Circular Wait)


다중프로그래밍 시스템에서는 시스템 성능을 향상시키기 위해 여러 프로세스를 동시에 운영하면서 공유자원을 순차적으로 할당해야 하므로, 어느 하나의 프로세스가 자원을 점유하면서 다른 프로세스에게 할당된 자원을 차지하기 위해 대기해야 한다.
2


Q4. 교착상태 회피를 위해 사용되는 은행가 알고리즘에 관한 사항으로 옳지 않은 것은?
1. 은행가 알고리즘을 적용하기 위해서는 자원의 양이 일정하여야 한다.
2. 은행가 알고리즘을 적용하기 위해서는 사용자의 수가 일정하여야 한다.
3. 은행가 알고리즘은 모든 요구를 유한시간 안에 할당하는 것을 보장한다.
4. 은행가 알고리즘은 대화식 시스템(Interactive-System)에 적용할 수 있다.


3
프로세스들의 자원 요구를 유한시간에 할당하는 것을 보장해야 하며, 할당된 자원도 유한시간에 반납되는 것을 보장해야 한다. 
